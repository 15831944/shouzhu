//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace Interop.Office.Core.my3dparts {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MDToolSoap", Namespace="http://www.my3dparts.com/")]
    public partial class MDTool : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMD5PwdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDESPwdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLoginIDByMdtOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMdtByLoginIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLogOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCompanyMgrIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHasLoginedOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLoginIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback addFriendOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFriendListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCollectedCompanyListOperationCompleted;
        
        private System.Threading.SendOrPostCallback addCollectCompOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCollectCompOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLocationByGuiGeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MDTool() {
            this.Url = global::Interop.Office.Core.Properties.Settings.Default.AutoPartNo_my3dparts_MDTool;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getLoginCompletedEventHandler getLoginCompleted;
        
        /// <remarks/>
        public event getMD5PwdCompletedEventHandler getMD5PwdCompleted;
        
        /// <remarks/>
        public event getDESPwdCompletedEventHandler getDESPwdCompleted;
        
        /// <remarks/>
        public event getLoginIDByMdtCompletedEventHandler getLoginIDByMdtCompleted;
        
        /// <remarks/>
        public event getMdtByLoginIDCompletedEventHandler getMdtByLoginIDCompleted;
        
        /// <remarks/>
        public event getLogOutCompletedEventHandler getLogOutCompleted;
        
        /// <remarks/>
        public event getCompanyMgrIDCompletedEventHandler getCompanyMgrIDCompleted;
        
        /// <remarks/>
        public event getHasLoginedCompletedEventHandler getHasLoginedCompleted;
        
        /// <remarks/>
        public event getLoginIDCompletedEventHandler getLoginIDCompleted;
        
        /// <remarks/>
        public event addFriendCompletedEventHandler addFriendCompleted;
        
        /// <remarks/>
        public event getFriendListCompletedEventHandler getFriendListCompleted;
        
        /// <remarks/>
        public event getCollectedCompanyListCompletedEventHandler getCollectedCompanyListCompleted;
        
        /// <remarks/>
        public event addCollectCompCompletedEventHandler addCollectCompCompleted;
        
        /// <remarks/>
        public event deleteCollectCompCompletedEventHandler deleteCollectCompCompleted;
        
        /// <remarks/>
        public event getLocationByGuiGeCompletedEventHandler getLocationByGuiGeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.my3dparts.com/getLogin", RequestNamespace="http://www.my3dparts.com/", ResponseNamespace="http://www.my3dparts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getLogin(string userName, string passWord, string mdt) {
            object[] results = this.Invoke("getLogin", new object[] {
                        userName,
                        passWord,
                        mdt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getLoginAsync(string userName, string passWord, string mdt) {
            this.getLoginAsync(userName, passWord, mdt, null);
        }
        
        /// <remarks/>
        public void getLoginAsync(string userName, string passWord, string mdt, object userState) {
            if ((this.getLoginOperationCompleted == null)) {
                this.getLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLoginOperationCompleted);
            }
            this.InvokeAsync("getLogin", new object[] {
                        userName,
                        passWord,
                        mdt}, this.getLoginOperationCompleted, userState);
        }
        
        private void OngetLoginOperationCompleted(object arg) {
            if ((this.getLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLoginCompleted(this, new getLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.my3dparts.com/getMD5Pwd", RequestNamespace="http://www.my3dparts.com/", ResponseNamespace="http://www.my3dparts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getMD5Pwd(string pwd) {
            object[] results = this.Invoke("getMD5Pwd", new object[] {
                        pwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getMD5PwdAsync(string pwd) {
            this.getMD5PwdAsync(pwd, null);
        }
        
        /// <remarks/>
        public void getMD5PwdAsync(string pwd, object userState) {
            if ((this.getMD5PwdOperationCompleted == null)) {
                this.getMD5PwdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMD5PwdOperationCompleted);
            }
            this.InvokeAsync("getMD5Pwd", new object[] {
                        pwd}, this.getMD5PwdOperationCompleted, userState);
        }
        
        private void OngetMD5PwdOperationCompleted(object arg) {
            if ((this.getMD5PwdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMD5PwdCompleted(this, new getMD5PwdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.my3dparts.com/getDESPwd", RequestNamespace="http://www.my3dparts.com/", ResponseNamespace="http://www.my3dparts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getDESPwd(string pwd) {
            object[] results = this.Invoke("getDESPwd", new object[] {
                        pwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDESPwdAsync(string pwd) {
            this.getDESPwdAsync(pwd, null);
        }
        
        /// <remarks/>
        public void getDESPwdAsync(string pwd, object userState) {
            if ((this.getDESPwdOperationCompleted == null)) {
                this.getDESPwdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDESPwdOperationCompleted);
            }
            this.InvokeAsync("getDESPwd", new object[] {
                        pwd}, this.getDESPwdOperationCompleted, userState);
        }
        
        private void OngetDESPwdOperationCompleted(object arg) {
            if ((this.getDESPwdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDESPwdCompleted(this, new getDESPwdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.my3dparts.com/getLoginIDByMdt", RequestNamespace="http://www.my3dparts.com/", ResponseNamespace="http://www.my3dparts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getLoginIDByMdt(string mdt) {
            object[] results = this.Invoke("getLoginIDByMdt", new object[] {
                        mdt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getLoginIDByMdtAsync(string mdt) {
            this.getLoginIDByMdtAsync(mdt, null);
        }
        
        /// <remarks/>
        public void getLoginIDByMdtAsync(string mdt, object userState) {
            if ((this.getLoginIDByMdtOperationCompleted == null)) {
                this.getLoginIDByMdtOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLoginIDByMdtOperationCompleted);
            }
            this.InvokeAsync("getLoginIDByMdt", new object[] {
                        mdt}, this.getLoginIDByMdtOperationCompleted, userState);
        }
        
        private void OngetLoginIDByMdtOperationCompleted(object arg) {
            if ((this.getLoginIDByMdtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLoginIDByMdtCompleted(this, new getLoginIDByMdtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.my3dparts.com/getMdtByLoginID", RequestNamespace="http://www.my3dparts.com/", ResponseNamespace="http://www.my3dparts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getMdtByLoginID(string LoginID) {
            object[] results = this.Invoke("getMdtByLoginID", new object[] {
                        LoginID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getMdtByLoginIDAsync(string LoginID) {
            this.getMdtByLoginIDAsync(LoginID, null);
        }
        
        /// <remarks/>
        public void getMdtByLoginIDAsync(string LoginID, object userState) {
            if ((this.getMdtByLoginIDOperationCompleted == null)) {
                this.getMdtByLoginIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMdtByLoginIDOperationCompleted);
            }
            this.InvokeAsync("getMdtByLoginID", new object[] {
                        LoginID}, this.getMdtByLoginIDOperationCompleted, userState);
        }
        
        private void OngetMdtByLoginIDOperationCompleted(object arg) {
            if ((this.getMdtByLoginIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMdtByLoginIDCompleted(this, new getMdtByLoginIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.my3dparts.com/getLogOut", RequestNamespace="http://www.my3dparts.com/", ResponseNamespace="http://www.my3dparts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getLogOut() {
            object[] results = this.Invoke("getLogOut", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getLogOutAsync() {
            this.getLogOutAsync(null);
        }
        
        /// <remarks/>
        public void getLogOutAsync(object userState) {
            if ((this.getLogOutOperationCompleted == null)) {
                this.getLogOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLogOutOperationCompleted);
            }
            this.InvokeAsync("getLogOut", new object[0], this.getLogOutOperationCompleted, userState);
        }
        
        private void OngetLogOutOperationCompleted(object arg) {
            if ((this.getLogOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLogOutCompleted(this, new getLogOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.my3dparts.com/getCompanyMgrID", RequestNamespace="http://www.my3dparts.com/", ResponseNamespace="http://www.my3dparts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getCompanyMgrID(int CompID) {
            object[] results = this.Invoke("getCompanyMgrID", new object[] {
                        CompID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getCompanyMgrIDAsync(int CompID) {
            this.getCompanyMgrIDAsync(CompID, null);
        }
        
        /// <remarks/>
        public void getCompanyMgrIDAsync(int CompID, object userState) {
            if ((this.getCompanyMgrIDOperationCompleted == null)) {
                this.getCompanyMgrIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCompanyMgrIDOperationCompleted);
            }
            this.InvokeAsync("getCompanyMgrID", new object[] {
                        CompID}, this.getCompanyMgrIDOperationCompleted, userState);
        }
        
        private void OngetCompanyMgrIDOperationCompleted(object arg) {
            if ((this.getCompanyMgrIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCompanyMgrIDCompleted(this, new getCompanyMgrIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.my3dparts.com/getHasLogined", RequestNamespace="http://www.my3dparts.com/", ResponseNamespace="http://www.my3dparts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getHasLogined() {
            object[] results = this.Invoke("getHasLogined", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getHasLoginedAsync() {
            this.getHasLoginedAsync(null);
        }
        
        /// <remarks/>
        public void getHasLoginedAsync(object userState) {
            if ((this.getHasLoginedOperationCompleted == null)) {
                this.getHasLoginedOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHasLoginedOperationCompleted);
            }
            this.InvokeAsync("getHasLogined", new object[0], this.getHasLoginedOperationCompleted, userState);
        }
        
        private void OngetHasLoginedOperationCompleted(object arg) {
            if ((this.getHasLoginedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHasLoginedCompleted(this, new getHasLoginedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.my3dparts.com/getLoginID", RequestNamespace="http://www.my3dparts.com/", ResponseNamespace="http://www.my3dparts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getLoginID() {
            object[] results = this.Invoke("getLoginID", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getLoginIDAsync() {
            this.getLoginIDAsync(null);
        }
        
        /// <remarks/>
        public void getLoginIDAsync(object userState) {
            if ((this.getLoginIDOperationCompleted == null)) {
                this.getLoginIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLoginIDOperationCompleted);
            }
            this.InvokeAsync("getLoginID", new object[0], this.getLoginIDOperationCompleted, userState);
        }
        
        private void OngetLoginIDOperationCompleted(object arg) {
            if ((this.getLoginIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLoginIDCompleted(this, new getLoginIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.my3dparts.com/addFriend", RequestNamespace="http://www.my3dparts.com/", ResponseNamespace="http://www.my3dparts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string addFriend(int FID) {
            object[] results = this.Invoke("addFriend", new object[] {
                        FID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addFriendAsync(int FID) {
            this.addFriendAsync(FID, null);
        }
        
        /// <remarks/>
        public void addFriendAsync(int FID, object userState) {
            if ((this.addFriendOperationCompleted == null)) {
                this.addFriendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddFriendOperationCompleted);
            }
            this.InvokeAsync("addFriend", new object[] {
                        FID}, this.addFriendOperationCompleted, userState);
        }
        
        private void OnaddFriendOperationCompleted(object arg) {
            if ((this.addFriendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addFriendCompleted(this, new addFriendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.my3dparts.com/getFriendList", RequestNamespace="http://www.my3dparts.com/", ResponseNamespace="http://www.my3dparts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getFriendList() {
            object[] results = this.Invoke("getFriendList", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getFriendListAsync() {
            this.getFriendListAsync(null);
        }
        
        /// <remarks/>
        public void getFriendListAsync(object userState) {
            if ((this.getFriendListOperationCompleted == null)) {
                this.getFriendListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFriendListOperationCompleted);
            }
            this.InvokeAsync("getFriendList", new object[0], this.getFriendListOperationCompleted, userState);
        }
        
        private void OngetFriendListOperationCompleted(object arg) {
            if ((this.getFriendListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFriendListCompleted(this, new getFriendListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.my3dparts.com/getCollectedCompanyList", RequestNamespace="http://www.my3dparts.com/", ResponseNamespace="http://www.my3dparts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getCollectedCompanyList(int LoginID) {
            object[] results = this.Invoke("getCollectedCompanyList", new object[] {
                        LoginID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getCollectedCompanyListAsync(int LoginID) {
            this.getCollectedCompanyListAsync(LoginID, null);
        }
        
        /// <remarks/>
        public void getCollectedCompanyListAsync(int LoginID, object userState) {
            if ((this.getCollectedCompanyListOperationCompleted == null)) {
                this.getCollectedCompanyListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCollectedCompanyListOperationCompleted);
            }
            this.InvokeAsync("getCollectedCompanyList", new object[] {
                        LoginID}, this.getCollectedCompanyListOperationCompleted, userState);
        }
        
        private void OngetCollectedCompanyListOperationCompleted(object arg) {
            if ((this.getCollectedCompanyListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCollectedCompanyListCompleted(this, new getCollectedCompanyListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.my3dparts.com/addCollectComp", RequestNamespace="http://www.my3dparts.com/", ResponseNamespace="http://www.my3dparts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string addCollectComp(int LoginID, int CompID, string CompName, int TypeID) {
            object[] results = this.Invoke("addCollectComp", new object[] {
                        LoginID,
                        CompID,
                        CompName,
                        TypeID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addCollectCompAsync(int LoginID, int CompID, string CompName, int TypeID) {
            this.addCollectCompAsync(LoginID, CompID, CompName, TypeID, null);
        }
        
        /// <remarks/>
        public void addCollectCompAsync(int LoginID, int CompID, string CompName, int TypeID, object userState) {
            if ((this.addCollectCompOperationCompleted == null)) {
                this.addCollectCompOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCollectCompOperationCompleted);
            }
            this.InvokeAsync("addCollectComp", new object[] {
                        LoginID,
                        CompID,
                        CompName,
                        TypeID}, this.addCollectCompOperationCompleted, userState);
        }
        
        private void OnaddCollectCompOperationCompleted(object arg) {
            if ((this.addCollectCompCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCollectCompCompleted(this, new addCollectCompCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.my3dparts.com/deleteCollectComp", RequestNamespace="http://www.my3dparts.com/", ResponseNamespace="http://www.my3dparts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string deleteCollectComp(int LoginID, int CompID) {
            object[] results = this.Invoke("deleteCollectComp", new object[] {
                        LoginID,
                        CompID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCollectCompAsync(int LoginID, int CompID) {
            this.deleteCollectCompAsync(LoginID, CompID, null);
        }
        
        /// <remarks/>
        public void deleteCollectCompAsync(int LoginID, int CompID, object userState) {
            if ((this.deleteCollectCompOperationCompleted == null)) {
                this.deleteCollectCompOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCollectCompOperationCompleted);
            }
            this.InvokeAsync("deleteCollectComp", new object[] {
                        LoginID,
                        CompID}, this.deleteCollectCompOperationCompleted, userState);
        }
        
        private void OndeleteCollectCompOperationCompleted(object arg) {
            if ((this.deleteCollectCompCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCollectCompCompleted(this, new deleteCollectCompCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.my3dparts.com/getLocationByGuiGe", RequestNamespace="http://www.my3dparts.com/", ResponseNamespace="http://www.my3dparts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getLocationByGuiGe(string GuiGe, string compID) {
            object[] results = this.Invoke("getLocationByGuiGe", new object[] {
                        GuiGe,
                        compID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getLocationByGuiGeAsync(string GuiGe, string compID) {
            this.getLocationByGuiGeAsync(GuiGe, compID, null);
        }
        
        /// <remarks/>
        public void getLocationByGuiGeAsync(string GuiGe, string compID, object userState) {
            if ((this.getLocationByGuiGeOperationCompleted == null)) {
                this.getLocationByGuiGeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLocationByGuiGeOperationCompleted);
            }
            this.InvokeAsync("getLocationByGuiGe", new object[] {
                        GuiGe,
                        compID}, this.getLocationByGuiGeOperationCompleted, userState);
        }
        
        private void OngetLocationByGuiGeOperationCompleted(object arg) {
            if ((this.getLocationByGuiGeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLocationByGuiGeCompleted(this, new getLocationByGuiGeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getLoginCompletedEventHandler(object sender, getLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getMD5PwdCompletedEventHandler(object sender, getMD5PwdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMD5PwdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMD5PwdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getDESPwdCompletedEventHandler(object sender, getDESPwdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDESPwdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDESPwdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getLoginIDByMdtCompletedEventHandler(object sender, getLoginIDByMdtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLoginIDByMdtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLoginIDByMdtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getMdtByLoginIDCompletedEventHandler(object sender, getMdtByLoginIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMdtByLoginIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMdtByLoginIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getLogOutCompletedEventHandler(object sender, getLogOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLogOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLogOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getCompanyMgrIDCompletedEventHandler(object sender, getCompanyMgrIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCompanyMgrIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCompanyMgrIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getHasLoginedCompletedEventHandler(object sender, getHasLoginedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHasLoginedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHasLoginedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getLoginIDCompletedEventHandler(object sender, getLoginIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLoginIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLoginIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void addFriendCompletedEventHandler(object sender, addFriendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addFriendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addFriendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getFriendListCompletedEventHandler(object sender, getFriendListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFriendListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFriendListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getCollectedCompanyListCompletedEventHandler(object sender, getCollectedCompanyListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCollectedCompanyListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCollectedCompanyListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void addCollectCompCompletedEventHandler(object sender, addCollectCompCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCollectCompCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCollectCompCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void deleteCollectCompCompletedEventHandler(object sender, deleteCollectCompCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCollectCompCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCollectCompCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void getLocationByGuiGeCompletedEventHandler(object sender, getLocationByGuiGeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLocationByGuiGeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLocationByGuiGeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591